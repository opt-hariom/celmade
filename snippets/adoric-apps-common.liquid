<script type="text/javascript">
  window.Adoric_State = window.Adoric_State || {};
  window.Adoric_State.shop = {
    permanent_domain: '{{ shop.permanent_domain }}',
    currency: {{ shop.currency | json }},
    money_format: {{ shop.money_format | json }},
    id: {{ shop.id | json }}
  };
  {% if customer %}
      window.Adoric_State.customer = {
        id: {{ customer.id | json }},
        tags: {{ customer.tags | json }},
        email: {{customer.email | json}},
        accepts_marketing: {{ customer.accepts_marketing | json }},
        first_name: {{ customer.first_name | json }},
        last_name: {{ customer.last_name | json }},
        orders_count: {{ customer.orders_count | json }},
        tags: {{ customer.tags | json }},
        total_spent: {{ customer.total_spent | json }}
      };
  {% endif %}
  window.Adoric_State.pageTitle = '{{ page_title }}'
  window.Adoric_State.template = '{{ template | split: "." | first }}';
  window.Adoric_State.cart = {% if cart.item_count > 0 %}{{ cart | json }}{% else %}{}{% endif %};

  {% if collection %}
      window.Adoric_State.collection = {{ collection | json }};

      if (window.Adoric_State.template == 'collection'){
        if (window.Adoric_State.collection) {
          window.Adoric_State.collectionName = window.Adoric_State.collection.handle
        } else {
          window.Adoric_State.collectionName = 'all'
        }
      }
  {% endif %}

  const ADORIC_RECENTRLY_VIEWED_PRODUCT_KEY = '_adoricRecentlyViewed';
  window.Adoric_State.counters = ["#CartCount span:first-child","#Cartcount",".cart-counter",".cart-count-bubble span:first-child",".number-wrapper .number",".header-cart__count",".cart-link .cartCountN",".cart-button span:first-child","#cartCount",".cart_count","a[href=\"/cart\"] span:not([class])","a[href=\"/cart\"] span[class^=\"count\"]","a[href=\"/cart\"] span[class$=\"Count\"]"]
  const ADORIC_SAVED_PRODUCTS_COUNT = 16;

  window.Adoric_State.getRecentlyViewed = async () => {
    const storageData = JSON.parse(localStorage.getItem(ADORIC_RECENTRLY_VIEWED_PRODUCT_KEY)) || [];
    const handles = window.Adoric_State.product 
      ? storageData.filter(item => item.id !== window.Adoric_State.product.id).map(({ handle }) => handle)
      : storageData.map(({ handle }) => handle);

    return fetch(window.Shopify.routes.root + `search?view=view-adoric-json&q=${handles.join(',')}`)
      .then(response => response.json());
  }

  const variantsMapper = (variant, product) => {
    const variantData =  {
      variantId: variant.id,
      productId: product.id,
      price: variant.price ? variant.price / 100 : null,
      comparePrice: variant.compare_at_price ? variant.compare_at_price / 100 : null,
      title: variant.title || product.title,
      image: null,
      imageAlt: null
    };

    if (variant.featured_image) {
      variantData.image = variant.featured_image.src;
      variantData.imageAlt = variant.featured_image.alt;
    } else {
      const image = product.media.find(file => file.media_type === 'image');

      if (image) {
        variantData.image = image.src;
        variantData.imageAlt = image.alt;
      }
    }

    return variantData;
  }

  window.Adoric_State.formatProducts = (products) => {
    return products.map(product => {
      const productData = {
        productId: product.item.id,
        title: product.item.title,
        handle: product.item.handle,
        description: product.trm.description
      };

      if (product.item.variants.length === 1) {
        productData.hasOneVariant = true;
        productData.variant = variantsMapper(product.item.variants[0], product.item);
      } else {
        productData.variants = product.item.variants.map(variant => variantsMapper(variant, product.item));
      }
      
      return productData;
    });
  }

  window.Adoric_State.getProductsByHandles = (handles) => {
      return fetch(window.Shopify.routes.root + `search?view=view-adoric-json&q=${handles.join(',')}`)
        .then(response => response.json());
  }

  window.Adoric_State.recentlyRecommendation = async () => {
    const { products } = await window.Adoric_State.getRecentlyViewed();

    return window.Adoric_State.formatProducts(products);
  }

  {% if product %}
    if (window.Adoric_State.template == 'product'){
      window.Adoric_State.product = {{ product | json }};
  
      function setProductAsViewed() {
        const oldProductsStr = localStorage.getItem(ADORIC_RECENTRLY_VIEWED_PRODUCT_KEY);
        if (!oldProductsStr) {
          return localStorage.setItem(
            ADORIC_RECENTRLY_VIEWED_PRODUCT_KEY, 
            JSON.stringify([{ id: window.Adoric_State.product.id, handle: window.Adoric_State.product.handle }])
          );
        }

        const oldProducts = JSON.parse(oldProductsStr)
            .filter(oldProduct => oldProduct.id !== window.Adoric_State.product.id);

        oldProducts.unshift({ id: window.Adoric_State.product.id, handle: window.Adoric_State.product.handle });

        const newProducts = oldProducts.slice(0, ADORIC_SAVED_PRODUCTS_COUNT);

        localStorage.setItem(
            ADORIC_RECENTRLY_VIEWED_PRODUCT_KEY, 
            JSON.stringify(newProducts)
          );
      }

      setProductAsViewed();

    }
  {% endif %}


</script>